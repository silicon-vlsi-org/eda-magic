%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: tutwrl1.dvi
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold Times-Italic Times-Roman
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSCommandLine: dvips tutwrl1.dvi -o tutwrl1.ps
%DVIPSParameters: dpi=600, comments removed
%DVIPSSource:  TeX output 2001.09.26:1352
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginFont: Times-Bold
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def
%%EndFont
%%BeginProcSet: texps.pro
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (tutwrl1.dvi)
@start /Fa 134[50 50 72 50 55 33 39 44 1[55 50 55 83
28 55 1[28 55 50 33 44 55 44 55 50 9[100 28[33 3[50 2[50
50 50 1[28 2[25 2[33 33 40[{ TeXBase1Encoding ReEncodeFont }33
100.000003 /Times-Bold rf /Fb 134[60 60 86 1[66 40 47
53 1[66 60 66 100 33 66 1[33 66 60 1[53 66 53 1[60 9[120
2[80 66 5[113 3[47 2[73 2[86 1[86 6[40 4[60 60 60 60
60 2[30 43[66 2[{ TeXBase1Encoding ReEncodeFont }36 119.999948
/Times-Bold rf /Fc 105[50 27[44 50 50 72 50 50 28 39
33 50 50 50 50 78 28 50 1[28 50 50 33 44 50 44 50 44
8[72 94 2[61 55 66 1[55 2[89 61 2[33 2[55 61 72 66 1[72
5[28 28 50 1[50 50 1[50 50 50 50 50 1[25 33 25 2[33 33
33 3[50 32[55 2[{ TeXBase1Encoding ReEncodeFont }58 100.000003
/Times-Roman rf /Fd 134[44 1[66 2[28 39 39 1[50 50 50
72 28 44 28 28 50 50 28 44 50 44 50 50 9[83 2[55 50 4[66
83 55 7[72 66 61 15[50 50 7[33 33 40[{ TeXBase1Encoding ReEncodeFont }
34 100.000003 /Times-Italic rf /Fe 134[72 72 104 1[80
48 56 64 2[72 80 1[40 2[40 80 72 1[64 80 64 1[72 9[143
2[96 1[104 4[135 3[56 2[88 96 104 104 1[104 6[48 5[72
72 72 72 3[48 9[72 35[{ TeXBase1Encoding ReEncodeFont }34
143.999997 /Times-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: Letter

%%EndSetup
%%Page: 1 1
1 0 bop 540 101 a Fe(Magic)36 b(T)-13 b(utorial)33 b(#W)-5
b(-1:)44 b(Design-Rule)33 b(Extensions)1747 521 y Fd(Don)24
b(Stark)1359 941 y Fc(W)-8 b(estern)25 b(Research)h(Laboratory)1327
1062 y(Digital)e(Equipment)f(Corporation)1530 1182 y(P)o(alo)i(Alto,)f
(CA)h(94301)1053 1453 y(This)f(tutorial)g(corresponds)g(to)g(Magic)h(v)
o(ersion)e(7.)0 1996 y Fb(T)-11 b(utorials)30 b(to)f(r)n(ead)h
(\002rst:)300 2214 y Fc(Magic)24 b(T)l(utorial)g(#6:)30
b(Design-Rule)25 b(Checking)300 2334 y(Magic)f(T)l(utorial)g(#9:)30
b(F)o(ormat)24 b(Con)l(v)o(ersion)g(for)h(CIF)h(and)f(Calma)300
2454 y(Magic)f(Maintainer')-5 b(s)24 b(Manual)g(#2:)30
b(The)25 b(T)-7 b(echnology)24 b(File)0 2670 y Fb(Commands)29
b(intr)n(oduced)j(in)f(this)f(tutorial:)300 2888 y Fd(\(None\))0
3103 y Fb(Macr)n(os)f(intr)n(oduced)i(in)g(this)f(tutorial:)300
3351 y Fd(\(None\))0 3979 y Fe(1)143 b(Intr)m(oduction)0
4207 y Fc(Magic')-5 b(s)33 b(original)g(design)h(rule)g(check)o(er)h
(has)f(pro)o(v)o(ed)e(inadequate)i(to)g(implement)e(all)i(the)g(rules)g
(found)f(in)0 4328 y(adv)n(anced)25 b(technologies.)30
b(The)25 b(rules)g(described)g(in)f(this)h(section)f(allo)n(w)g(more)h
(complicated)f(con\002gurations)0 4448 y(to)k(be)g(analyzed.)41
b(T)-8 b(w)o(o)27 b(ne)n(w)h(rules)g(check)g(a)h(re)o(gion')-5
b(s)26 b(area)j(and)f(its)g(maximum)e(width.)40 b(In)28
b(addition,)f(width,)0 4569 y(spacing,)d(area,)i(and)f(maxwidth)e
(checks)i(may)f(no)n(w)g(be)h(performed)g(on)g(cif)g(layers.)0
4924 y Fe(2)143 b(Ar)m(ea)35 b(Rules)0 5152 y Fc(The)25
b Fa(ar)n(ea)g Fc(rule)g(is)f(used)h(to)f(check)h(the)g(minimum)d(area)
k(of)f(a)g(re)o(gion.)30 b(Its)25 b(syntax)f(is:)900
5400 y Fa(ar)n(ea)h Fd(types)g(minar)l(ea)f(minedg)o(e)h(why)1875
5649 y Fc(\2261\226)p eop
%%Page: 2 2
2 1 bop 0 -180 a Fc(September)25 b(26,)f(2001)1234 b(Magic)25
b(T)l(utorial)e(#W)-6 b(-1:)30 b(Design-Rule)25 b(Extensions)146
68 y Fd(T)-7 b(ypes)20 b Fc(is)f(a)g(list)g(of)g(types)g(that)f
(compose)h(the)g(re)o(gion,)h(all)f(of)g(which)g(must)f(be)i(on)f(the)g
(same)g(plane.)29 b Fd(Minar)l(ea)0 188 y Fc(is)24 b(the)h(minimum)d
(area)j(that)f(a)h(re)o(gion)f(must)g(ha)n(v)o(e,)g(while)g
Fd(minedg)o(e)g Fc(is)g(the)h(minimum)d(length)i(of)g(an)h(edge)g(for)0
309 y(the)d(re)o(gion.)29 b(This)21 b(second)h(dimension)f(is)h
(basically)f(an)h(optimization)f(to)g(mak)o(e)h(the)g(design)g(rule)g
(check)o(er)h(run)0 429 y(f)o(aster;)h(without)d(it,)i(the)g(check)o
(er)h(has)f(to)f(assume)h(that)f(a)i(re)o(gion)e(1)h(lambda)f(wide)h
(and)g Fd(minar)l(ea)g Fc(long)f(is)g(le)o(gal,)0 549
y(and)29 b(it)f(must)f(e)o(xamine)h(a)h(much)f(lar)n(ger)h(area)g(when)
g(checking)f(the)g(interaction)g(between)h(cells.)41
b(Specifying)0 670 y Fd(minedg)o(e)24 b Fc(reduces)i(this)d
(interaction)h(distance.)31 b(An)24 b(e)o(xample)g(rule)h(is:)900
849 y Fa(ar)n(ea)g(\(emitter)-9 b(,em1c\)/npoly)26 b(6)f(2)2164
849 y
(") show
 2164 849 a 60 w Fa(emitter)h(must)f(be)h(at)f(least)f(2x3)3395
849 y
(") show
 3395 849 a 683 2415 a @beginspecial 68 @llx 68
@lly 331 @urx 211 @ury 3042 @rwi @setspecial
%%BeginDocument: ../psfigures/tutw1.2.ps
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def


% XCircuit output starts here.

/arrowhead {
% -12 -32 24 36 bbox
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249  1.00 endpath
endgate
} def

/pgsave save def bop
% 576 260 offsets
1.0000 inchscale
2.6000 setlinewidth

0.439 1.000 0.314 scb
240  1.00 192 196 192 548 704 548 704 196 4 polygon
sce
(minarea) {/Times-Roman 1.000 cf} 2 21 0 448 372 label
0  1.00 192 196 192 548 704 548 704 196 4 polygon
(minedge) {/Times-Roman 1.000 cf} 2 20 0 736 372 label
1  1.00 720 548 800 548 2 polygon
1  1.00 720 196 800 196 2 polygon
1  1.00 768 532 768 404 2 polygon
1  1.00 768 340 768 212 2 polygon
1.00 0 768 548 arrowhead
1.00 -181 768 196 arrowhead
pgsave restore showpage

XCIRCsave restore
%%EndDocument
 @endspecial 1251 2618 a Fc(Figure)h(1:)31 b(Example)24
b(of)h(the)f(area)i(rule.)0 3136 y Fe(3)143 b(Maxwidth)35
b(Rules)0 3360 y Fc(Sometimes)28 b(a)h(technology)f(requires)g(that)h
(a)g(re)o(gion)f(not)g(be)h(wider)g(than)g(a)g(certain)g(v)n(alue.)42
b(The)29 b Fa(maxwidth)0 3480 y Fc(rule)c(can)g(be)g(used)f(to)h(check)
g(this.)900 3660 y Fa(maxwidth)g Fd(layer)o(s)f(mwidth)h(bends)f(why)
146 3839 y(Layer)o(s)p Fc(,)30 b(the)e(types)f(that)h(compose)f(the)h
(re)o(gion,)g(must)g(all)f(be)i(in)f(the)g(same)g(plane.)40
b(The)29 b(re)o(gion)e(must)g(be)0 3960 y(less)20 b(than)h
Fd(mwidth)f Fc(wide)g(in)h(either)f(the)h(horizontal)f(or)h(v)o
(ertical)f(dimension.)27 b Fd(Bends)21 b Fc(tak)o(es)f(one)h(of)g(tw)o
(o)f(v)n(alues,)0 4080 y Fa(bend)p 215 4080 30 4 v 37
w(illegal)29 b Fc(and)i Fa(bend)p 921 4080 V 37 w(ok)p
Fc(.)47 b(F)o(or)30 b Fa(bend)p 1511 4080 V 38 w(illegal)f
Fc(rules,)i(the)f(check)o(er)h(forms)f(a)h(bounding)e(box)g(around)h
(all)0 4200 y(contiguous)23 b(tiles)h(of)h(the)g(correct)g(type,)g
(then)f(checks)h(this)f(box')-5 b(s)24 b(width.)29 b(F)o(or)c(e)o
(xample:)900 4380 y Fa(maxwidth)g(\(emitter)-9 b(,em1c\)/npoly)26
b(2)f(bend)p 2545 4380 V 37 w(illegal)2855 4380 y
/bksp 2 string def bksp 0 92 put bksp show
 2855
4380 a 1421 4500 a
(") show
 1421 4500 a 60 w Fa(emitter)h(width)f(cannot)h(be)g
(o)o(v)o(er)f(2)2783 4500 y
(") show
 2783 4500 a 146 4680 a Fa(bend)p
361 4680 30 4 v 38 w(ok)19 b Fc(rules)g(are)g(used)g(to)f(check)i
(structures)e(where)i(the)e(re)o(gion)g(must)g(be)h(locally)g(less)f
(than)h(maxwidth,)0 4800 y(b)n(ut)24 b(may)h(contain)f(bends,)g(T')-5
b(s,)24 b(and)h(X')-5 b(s.)900 4980 y Fa(maxwidth)25
b(tr)n(ench)i(2)e(bend)p 1941 4980 V 37 w(ok)2102 4980
y
(") show
 2102 4980 a 60 w Fa(tr)n(ench)i(must)e(be)g(exactly)g(2)g(wide)3419
4980 y
(") show
 3419 4980 a 146 5159 a Fa(W)-6 b(ar)o(ning:)37
b Fc(the)28 b(bend)p 941 5159 30 4 v 35 w(ok)g(rule)g(is)g(basically)f
(a)i(kludge,)f(and)g(may)g(f)o(ail)g(for)g(re)o(gions)f(composed)g(of)h
(more)0 5280 y(than)e(one)g(type,)h(or)f(for)h(intersections)e(more)i
(complicated)e(than)h(T')-5 b(s)26 b(or)h(X')-5 b(s.)35
b(Figure)26 b(3)h(sho)n(ws)e(some)h(e)o(xam-)0 5400 y(ples)e(of)h(both)
f(types)h(of)f(rules.)1875 5649 y(\2262\226)p eop
%%Page: 3 3
3 2 bop 0 -180 a Fc(Magic)24 b(T)l(utorial)g(#W)-6 b(-1:)30
b(Design-Rule)24 b(Extensions)1233 b(September)25 b(26,)g(2001)0
1459 y @beginspecial 68 @llx 68 @lly 862 @urx 365 @ury
4680 @rwi @setspecial
%%BeginDocument: ../psfigures/tutw1.1.ps
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def


% XCircuit output starts here.

/arrowhead {
% -12 -32 24 36 bbox
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249  1.00 endpath
endgate
} def

/pgsave save def bop
% 1200 357 offsets
1.0000 inchscale
2.6000 setlinewidth

0.800 0.800 0.800 scb
240  1.00 192 261 192 965 1072 965 1072 261 4 polygon
240  1.00 1136 261 1136 965 2288 965 2288 261 4 polygon
sce
0.745 0.600 0.871 scb
240  1.00 720 549 720 645 912 645 912 549 4 polygon
241  1.00 496 581 368 581 368 677 592 677 592 485 496 485 496 581 7 polygon
sce
0  1.00 720 549 720 645 912 645 912 549 4 polygon
0.490 0.651 0.980 scb
241  1.00 1232 389 1616 389 1616 901 1232 901 1232 485 1168 485 1168 421 1232 
421 1232 389 1296 453 1296 805 1552 805 1552 453 1296 453 14 polygon
241  1.00 1840 389 1840 613 1744 613 1744 677 1840 677 1840 901 2192 901 2192 
581 2256 581 2256 517 2192 517 2192 389 1840 389 1904 453 2128 453 2128 517 
2064 517 2064 581 2128 581 2128 837 1904 837 1904 453 22 polygon
sce
0  1.00 1296 453 1296 805 1552 805 1552 453 4 polygon
1  1.00 1904 453 1904 837 2128 837 2128 581 2064 581 2064 517 2128 517 2128 453 
1904 453 9 polygon
1  1.00 2192 389 1840 389 1840 613 1744 613 1744 677 1840 677 1840 901 2192 901 
2192 581 2256 581 2256 517 2192 517 2192 389 13 polygon
1  1.00 1232 485 1232 901 1616 901 1616 389 1232 389 1232 421 1168 421 1168 485 
1232 485 9 polygon
1  1.00 496 581 368 581 368 677 592 677 592 485 496 485 496 581 7 polygon
(mwidth) {/Times-Roman 1.000 cf} 2 23 0 336 629 label
(mwidth) {/Times-Roman 1.000 cf} 2 23 0 416 437 label
(mwidth) {/Times-Roman 1.000 cf} 2 20 0 928 597 label
1  1.00 928 645 1008 645 2 polygon
1  1.00 928 549 1008 549 2 polygon
1  1.00 960 661 960 709 2 polygon
1  1.00 960 533 960 485 2 polygon
1  1.00 352 581 272 581 2 polygon
1  1.00 320 565 320 517 2 polygon
1  1.00 352 677 272 677 2 polygon
1  1.00 320 693 320 741 2 polygon
1  1.00 496 469 496 405 2 polygon
1  1.00 592 469 592 405 2 polygon
1  1.00 576 437 432 437 2 polygon
1.00 0 960 549 arrowhead
1.00 0 320 581 arrowhead
1.00 -181 320 677 arrowhead
1.00 -181 960 645 arrowhead
1.00 -91 592 437 arrowhead
1.00 -91 496 437 arrowhead
(invalid) {/Times-Roman 1.250 cf} 2 21 0 464 325 label
(valid) {/Times-Roman 1.250 cf} 2 21 0 816 325 label
(invalid) {/Times-Roman 1.250 cf} 2 21 0 1424 325 label
(valid) {/Times-Roman 1.250 cf} 2 21 0 2016 325 label
(bend_ok) {/Times-Roman 1.500 cf} 2 21 0 1728 213 label
(bend_illegal) {/Times-Roman 1.500 cf} 2 21 0 608 213 label
pgsave restore showpage

XCIRCsave restore
%%EndDocument
 @endspecial 324 x(Figure)k(2:)38 b(Examples)28 b(of)g(the)h(maxwidth)e
(rule.)42 b(The)29 b(dogle)o(g)e(at)i(the)f(left)h(w)o(ould)f(be)g(ok)h
(in)f(a)h Fa(bend)p 3555 1783 30 4 v 37 w(ok)g Fc(rule,)0
1903 y(b)n(ut)h(f)o(ails)g(in)g(a)h Fa(bend)p 755 1903
V 37 w(illegal)f Fc(one,)i(where)f(the)f(re)o(gion')-5
b(s)29 b(bounding)g(box)h(is)g(check)o(ed.)49 b(F)o(or)30
b Fa(bend)p 3514 1903 V 38 w(ok)g Fc(rules,)0 2023 y(each)e(tile)e(in)g
(the)h(re)o(gion)f(is)h(check)o(ed.)37 b(The)27 b(left)g(shape)g(f)o
(ails)f(in)h(tw)o(o)f(places:)35 b(the)27 b(top)f(horizontal)g(part)h
(is)g(too)0 2144 y(thick)d(and)h(the)g(stub)f(at)g(the)h(bottom)e
(intersects)h(the)h(re)o(gion)f(in)g(a)i(shape)e(other)h(than)f(a)i(T)e
(or)h(X.)0 2525 y Fe(4)143 b(Rules)35 b(on)g(CIF)g(lay)o(ers)0
2749 y Fc(F)o(or)21 b(technologies)f(with)h(complicated)f(generated)i
(layers,)f(it)g(is)g(often)g(dif)n(\002cult)f(to)h(check)h(design)e
(rules)h(on)g(the)0 2869 y(abstract)30 b(types)f(that)g(are)h(dra)o(wn)
g(in)f(Magic.)45 b(T)-8 b(o)29 b(ameliorate)h(this)e(problem,)i(the)g
(e)o(xtended)f(check)o(er)h(allo)n(ws)0 2990 y(simple)19
b(checks)i(to)f(be)h(performed)f(on)g(cif)h(layers.)29
b(The)21 b(rules)f(that)g(can)h(be)f(check)o(ed)h(are)g(width,)g
(spacing,)f(area,)0 3110 y(and)28 b(maxarea.)40 b(Since)28
b(checking)g(rules)f(on)h(the)f(cif)h(layers)g(requires)g(that)f(these)
h(layers)g(be)f(generated,)i(these)0 3230 y(checks)k(are)h
(considerably)e(slo)n(wer)g(than)g(the)h(normal)f(ones,)j(and)d(should)
g(only)g(be)h(used)g(when)f(absolutely)0 3351 y(necessary)-6
b(.)0 3643 y Fb(4.1)119 b(Setting)31 b(the)f(CIF)g(style)0
3830 y Fc(The)25 b Fa(cifstyle)g Fc(rule)f(is)h(used)f(to)h(select)f
(which)h Fa(cif)n(output)h Fc(style)e(is)g(used.)900
4033 y Fa(cifstyle)h Fd(cif)p 1330 4033 V 35 w(style)146
4236 y(Cif)p 274 4236 V 36 w(style)36 b Fc(must)f(be)h(one)h(of)f(the)g
(cif)h(styles)e(included)g(in)h(the)g(cifoutput)f(section.)65
b(In)36 b(the)g(current)h(im-)0 4357 y(plementation,)c(the)g(cif)g
(check)o(er)h(generates)g(all)e(the)h(layers)g(in)g(the)g(style)f(re)o
(gardless)g(of)h(whether)g(the)o(y)f(are)0 4477 y(actually)27
b(used)h(in)g(design-rule)f(checks;)i(for)f(speed,)h(de\002ning)e(a)i
(separate)f(cif)g(style)f(for)h(design)g(rule)f(check-)0
4597 y(ing)h(it)g(may)f(be)i(w)o(orthwhile)e(when)h(only)g(a)g(fe)n(w)h
(layers)f(are)h(check)o(ed.)42 b(An)o(y)27 b(layer)i(in)f(the)g(cif)g
(style,)h(de\002ned)0 4718 y(by)c(either)f(a)h Fd(layer)g
Fc(or)g(a)g Fd(templayer)f Fc(rule,)h(may)g(be)g(check)o(ed.)0
5009 y Fb(4.2)119 b(W)n(idth)30 b(Checks)0 5197 y Fc(The)25
b(syntax)f(for)h Fa(cifwidth)h Fc(is)e(analogous)g(to)g(that)h(of)f
(the)h(re)o(gular)g(width)e(rule:)900 5400 y Fa(cifwidth)j
Fd(layer)e(width)h(why)1875 5649 y Fc(\2263\226)p eop
%%Page: 4 4
4 3 bop 0 -180 a Fc(September)25 b(26,)f(2001)1234 b(Magic)25
b(T)l(utorial)e(#W)-6 b(-1:)30 b(Design-Rule)25 b(Extensions)146
68 y Fd(Layer)j Fc(is)g(a)g(single)e(cif)i(layer)-5 b(.)39
b(\(T)-8 b(o)28 b(do)f(width)g(checks)h(with)f(more)g(than)g(one)h(cif)
g(layer)l(,)g Fa(or)g Fc(all)g(the)f(layers)0 188 y(into)d(a)h(ne)n(w)f
Fd(templayer)p Fc(\).)31 b Fd(W)-5 b(idth)23 b Fc(is)i(the)f(minimum)f
(width)h(of)g(the)h(re)o(gion)f(in)g(centimicrons.)0
483 y Fb(4.3)119 b(Spacing)31 b(Checks)0 671 y Fc(The)25
b Fa(cifspacing)g Fc(rule)g(is)f(also)h(v)o(ery)f(similar)g(to)g(the)h
(re)o(gular)f(rule:)900 899 y Fa(cifspacing)h Fd(layer1)g(layer2)f
(separ)o(ation)f(adjacency)h(why)146 1128 y(Layer1)35
b Fc(and)e Fd(layer2)h Fc(are)h(both)e(cif)h(layers.)58
b(If)34 b Fd(adjacency)g Fc(is)g Fa(touching)p 2771 1128
30 4 v 36 w(ok)p Fc(,)j(then)c(layer1)h(must)f(equal)0
1248 y(layer2.)59 b(F)o(or)34 b Fa(touching)p 880 1248
V 36 w(illegal)f Fc(rules,)j Fd(layer1)e Fc(and)g Fd(layer2)g
Fc(may)f(be)i(an)o(y)e(tw)o(o)h(cif)g(layers.)59 b Fd(Separ)o(ation)32
b Fc(is)0 1368 y(gi)n(v)o(en)23 b(in)i(centimicrons.)0
1664 y Fb(4.4)119 b(Ar)n(ea)30 b(Checks)0 1851 y Fc(The)25
b(area)h(rule)e(is:)900 2080 y Fa(cifar)n(ea)h Fd(layer)g(minar)l(ea)f
(minedg)o(e)h(why)146 2308 y(Layer)g Fc(is)e(again)g(a)h(single)f(cif)h
(layer)-5 b(.)30 b Fd(minedg)o(e)23 b Fc(is)h(e)o(xpressed)f(in)g
(centimicrons,)g(and)h Fd(minar)l(ea)f Fc(is)g(gi)n(v)o(en)f(in)0
2428 y(square)j(centimicrons.)0 2723 y Fb(4.5)119 b(Maxwidth)31
b(Checks)0 2911 y Fc(The)25 b(maxwidth)e(rule)i(is:)900
3139 y Fa(cifmaxwidth)g Fd(layer)g(mwidth)f(bends)g(why)146
3368 y Fc(Again,)g Fd(layer)h Fc(is)f(a)h(single)f(cif)h(layer)l(,)g
(and)g Fd(mwidth)f Fc(is)h(gi)n(v)o(en)e(in)h(centimicrons.)1875
5649 y(\2264\226)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
